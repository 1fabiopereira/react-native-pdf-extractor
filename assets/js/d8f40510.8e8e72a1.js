"use strict";(self.webpackChunkreact_native_pdf_extractor_docs=self.webpackChunkreact_native_pdf_extractor_docs||[]).push([[792],{3905:function(t,e,r){r.d(e,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var u=n.createContext({}),c=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},d=function(t){var e=c(t.components);return n.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,o=t.originalType,u=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),p=c(r),f=l,k=p["".concat(u,".").concat(f)]||p[f]||s[f]||o;return r?n.createElement(k,a(a({ref:e},d),{},{components:r})):n.createElement(k,a({ref:e},d))}));function f(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=r.length,a=new Array(o);a[0]=p;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i.mdxType="string"==typeof t?t:l,a[1]=i;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1974:function(t,e,r){r.r(e),r.d(e,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var n=r(7462),l=r(3366),o=(r(7294),r(3905)),a=["components"],i={sidebar_position:1},u="Extractor",c={unversionedId:"api/extractors/Extractor",id:"api/extractors/Extractor",title:"Extractor",description:"This extractor is built on top of BaseExtractor, and exposes as react component with the following props:",source:"@site/docs/api/extractors/Extractor.md",sourceDirName:"api/extractors",slug:"/api/extractors/Extractor",permalink:"/react-native-pdf-extractor/docs/api/extractors/Extractor",draft:!1,editUrl:"https://github.com/1fabiopereira/react-native-pdf-extractor/edit/master/website/docs/api/extractors/Extractor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Extractors",permalink:"/react-native-pdf-extractor/docs/api/extractors"},next:{title:"BaseExtractor",permalink:"/react-native-pdf-extractor/docs/api/extractors/BaseExtractor"}},d={},s=[],p={toc:s};function f(t){var e=t.components,r=(0,l.Z)(t,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extractor"},"Extractor"),(0,o.kt)("p",null,"This extractor is built on top of ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/extractors/BaseExtractor"},"BaseExtractor"),", and exposes as react component with the following props:"),(0,o.kt)("table",null,(0,o.kt)("th",null,"Property"),(0,o.kt)("th",null,"Type"),(0,o.kt)("th",null,"Required"),(0,o.kt)("th",null,"Default"),(0,o.kt)("th",null,"Description"),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"onResult"),(0,o.kt)("td",null,"(data: TransientObject) => void"),(0,o.kt)("td",null,"true"),(0,o.kt)("td",null),(0,o.kt)("td",null,"Callback function called when data extraction ends.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"uri"),(0,o.kt)("td",null,"string | undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"undefined"),(0,o.kt)("td",null,"File path")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"patterns"),(0,o.kt)("td",null,"RegExp | RegExp[]"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"undefined"),(0,o.kt)("td",null,"Regular expressions used to find matches")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"fromIntent"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"Determine if application should try get uri from intent provider (Android only)")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"title"),(0,o.kt)("td",null,"string | undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"This file is protected"),(0,o.kt)("td",null,"Title displayed on password modal when file is encrypted")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"placeholder"),(0,o.kt)("td",null,"string | undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"Password"),(0,o.kt)("td",null,"Input text placeholder displayed on password modal when file is encrypted")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"submit"),(0,o.kt)("td",null,"string | undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"Open"),(0,o.kt)("td",null,"Text of submit button displayed on password modal when file is encrypted")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"cancel"),(0,o.kt)("td",null,"string | undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"Cancel"),(0,o.kt)("td",null,"Text of cancel button displayed on password modal when file is encrypted")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 You can see a full implementation at ",(0,o.kt)("a",{parentName:"p",href:"/react-native-pdf-extractor/docs/getting-started/playground"},"Playground"),".")))}f.isMDXComponent=!0}}]);