"use strict";(self.webpackChunkreact_native_pdf_extractor_docs=self.webpackChunkreact_native_pdf_extractor_docs||[]).push([[792],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var c=n.createContext({}),s=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},u=function(t){var e=s(t.components);return n.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,c=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,i(i({ref:e},u),{},{components:r})):n.createElement(m,i({ref:e},u))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1974:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:1},c="Extractor",s={unversionedId:"api/extractors/Extractor",id:"api/extractors/Extractor",title:"Extractor",description:"This extractor is built on top of BaseExtractor, and exposes two methods for extracting data.",source:"@site/docs/api/extractors/Extractor.md",sourceDirName:"api/extractors",slug:"/api/extractors/Extractor",permalink:"/react-native-pdf-extractor/docs/api/extractors/Extractor",draft:!1,editUrl:"https://github.com/1fabiopereira/react-native-pdf-extractor/edit/master/website/docs/api/extractors/Extractor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Extractors",permalink:"/react-native-pdf-extractor/docs/api/extractors"},next:{title:"BaseExtractor",permalink:"/react-native-pdf-extractor/docs/api/extractors/BaseExtractor"}},u={},p=[{value:"extract",id:"extract",level:2},{value:"extractFromIntent",id:"extractfromintent",level:2}],d={toc:p};function f(t){var e=t.components,r=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extractor"},"Extractor"),(0,o.kt)("p",null,"This extractor is built on top of ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/extractors/BaseExtractor"},"BaseExtractor"),", and exposes two methods for extracting data."),(0,o.kt)("h2",{id:"extract"},"extract"),(0,o.kt)("p",null,"This function receive a path and patterns to find matches (optional) and returns ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise<TransientObject>")," that is data extraction result. In case that no patterns was passed it's returns a list with all file text separated by lines."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"async function extract(uri: string, patterns?: string | string[]): Promise<TransientObject>\n")),(0,o.kt)("table",null,(0,o.kt)("th",null,"name"),(0,o.kt)("th",null,"type"),(0,o.kt)("th",null,"default"),(0,o.kt)("th",null,"required"),(0,o.kt)("th",null,"description"),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"uri"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"undefined"),(0,o.kt)("td",null,"true"),(0,o.kt)("td",null,"file path")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"patterns"),(0,o.kt)("td",null,"string | string[]"),(0,o.kt)("td",null,"undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"patterns to find")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"TransientObject")," looks like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/*\n    {\n        duration: '40ms', <-----------------------------: Time spent to match\n        isEncrypted: true, <----------------------------: Was file encrypted?\n        pages: 2, <-------------------------------------: File number of pages\n        patterns: ['(/\\S+@\\w+\\.\\w+)/g'], <--------------: List of used patterns\n        text: ['name@mail.com'], <----------------------: List of found matches on file\n        uri: 'content://some-file-path.pdf' <-----------: File path\n    }\n*/  \n")),(0,o.kt)("h2",{id:"extractfromintent"},"extractFromIntent"),(0,o.kt)("p",null,"This function receive patterns to find matches (optional) and returns ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise<TransientObject>")," that is data extraction result. In case that no patterns was passed it's returns a list with all file text separated by lines. This function was designed thinking on handle ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/content/Intent"},"Intent Actions")," that delegate to app a open file operation."),(0,o.kt)("table",null,(0,o.kt)("th",null,"name"),(0,o.kt)("th",null,"type"),(0,o.kt)("th",null,"default"),(0,o.kt)("th",null,"required"),(0,o.kt)("th",null,"description"),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"patterns"),(0,o.kt)("td",null,"string | string[]"),(0,o.kt)("td",null,"undefined"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"patterns to find")))))}f.isMDXComponent=!0}}]);